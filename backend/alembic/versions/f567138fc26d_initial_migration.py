"""Initial migration

Revision ID: f567138fc26d
Revises: 
Create Date: 2025-01-08 13:35:21.366877

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f567138fc26d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_songs_artist', table_name='songs')
    op.drop_index('ix_songs_genre', table_name='songs')
    op.drop_index('ix_songs_id', table_name='songs')
    op.drop_index('ix_songs_lyrics', table_name='songs')
    op.drop_index('ix_songs_title', table_name='songs')
    op.drop_table('songs')
    op.drop_index('ix_payments_id', table_name='payments')
    op.drop_table('payments')
    op.drop_index('ix_albums_description', table_name='albums')
    op.drop_index('ix_albums_id', table_name='albums')
    op.drop_index('ix_albums_title', table_name='albums')
    op.drop_table('albums')
    op.drop_table('user_album')
    op.drop_table('user_song')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('avatar', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('default_avatar', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('stripe_account_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('user_song',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('song_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['song_id'], ['songs.id'], name='user_song_song_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'song_id', name='user_song_pkey')
    )
    op.create_table('user_album',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('album_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['albums.id'], name='user_album_album_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'album_id', name='user_album_pkey')
    )
    op.create_table('albums',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('albums_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cover', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('default_cover', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='albums_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_albums_title', 'albums', ['title'], unique=False)
    op.create_index('ix_albums_id', 'albums', ['id'], unique=False)
    op.create_index('ix_albums_description', 'albums', ['description'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('song_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('payment_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['song_id'], ['songs.id'], name='payments_song_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='payments_pkey')
    )
    op.create_index('ix_payments_id', 'payments', ['id'], unique=False)
    op.create_table('songs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('artist', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('genre', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('lyrics', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('file', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('cover', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('default_cover', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('album_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['album_id'], ['albums.id'], name='songs_album_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='songs_pkey')
    )
    op.create_index('ix_songs_title', 'songs', ['title'], unique=False)
    op.create_index('ix_songs_lyrics', 'songs', ['lyrics'], unique=False)
    op.create_index('ix_songs_id', 'songs', ['id'], unique=False)
    op.create_index('ix_songs_genre', 'songs', ['genre'], unique=False)
    op.create_index('ix_songs_artist', 'songs', ['artist'], unique=False)
    # ### end Alembic commands ###
